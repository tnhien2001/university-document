# -*- coding: utf-8 -*-
"""HW_week2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AxioxrPvHBraZ5eJTtdDTY6tfnYlm-Jn
"""

from google.colab import drive
drive.mount('/content/gdrive')

!/content/bank2.dat

"""* Họ tên: Trịnh Ngọc Hiến
* MSSV: 19110315

#Bài 1

* Load dữ liệu bank2.dat
"""

from numpy import *
import numpy as np
dataset = np.array([vec.strip().split()for vec in open ('/content/bank2.dat').readlines()])
data = dataset.astype(float)
print(data)

"""* Xem mỗi cột dữ liệu là 1 vecto:"""

vt_a = np.loadtxt('/content/bank2.dat')[:, 0]
vt_b = np.loadtxt('/content/bank2.dat')[:, 1]
vt_c = np.loadtxt('/content/bank2.dat')[:, 2]
vt_d = np.loadtxt('/content/bank2.dat')[:, 3]
vt_e = np.loadtxt('/content/bank2.dat')[:, 4]
vt_f = np.loadtxt('/content/bank2.dat')[:, 5]

"""* Tính giá trị trung bình mỗi cột"""

tb_a = np.mean(vt_a)
print("Giá trị trung bình của vecto A là:",tb_a)

tb_b = np.mean(vt_b)
print("Giá trị trung bình của vecto B là:",tb_b)

tb_c = np.mean(vt_c)
print("Giá trị trung bình của vecto C là:",tb_c)

tb_d = np.mean(vt_d)
print("Giá trị trung bình của vecto D là:",tb_d)

tb_e = np.mean(vt_e)
print("Giá trị trung bình của vecto E là:",tb_e)

tb_f = np.mean(vt_f)
print("Giá trị trung bình của vecto F là:",tb_f)

"""* Vecto trung binh muy:"""

mu = np.array([tb_a,tb_b,tb_c,tb_d,tb_e,tb_f])
print("Vecto trung bình muy là:",mu)

"""* Tính ma trận B = X − hμ$T$ với h là ma trận số 1."""

mu_T = np.transpose(mu)
h = np.ones(6)
B = data - h*mu_T
print("Ma trận B là:\n",B)

"""* Tính ma trận covariance C = B$T$B, sau đó tìm giá trị riêng và vecto riêng."""

B_T = np.transpose(B)
C = B_T.dot(B)
print("Ma trận C là:\n",C)

"""* Tìm giá trị riêng và vecto riêng."""

from numpy import linalg as la

  w, v = la.eig(C)

  # Danh sách trị riêng
  print("Eigenvalues: ")
  print(w)
  # Danh sách vector riêng
  print("Eigenvectors: ")
  print(v)

"""* Xếp giá trị riêng và vecto riêng theo thứ tự giảm dần."""

#Xếp giá trị riêng theo thứ tự giảm dần
print(sorted(w, reverse=True))
#Xếp vecto riêng theo thứ tự giảm dần
v.sort()
print(v)

"""* Tính tỉ lệ phần trăm tích luỹ giá trị riêng so với tổng tất cả giá trị riêng rồi so sánh với
ngưỡng PCA (thường ≥ 90%).
"""

